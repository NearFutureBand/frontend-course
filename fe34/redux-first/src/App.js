import './App.css';
import { useSelector, useDispatch } from 'react-redux';

/**
 * 1) Обычный функциональный компонент
 */
const App = () => {
  /**
   * 2) Получение переменной из редакса, чтобы использовать
   * ее в компоненте. Хук useSelector принимает функцию. Эта функция
   * принимает стейт редакса и в ней нужно описать путь к нужной переменной.
   * Переменная state имеет такой же вид как и initialState в редьюсере
   */
  const numberFromRedux = useSelector(  (state) => { return state.number }  );
  
  /**
   * 4) dispatch - функция для того чтобы запускать экшены. Запуск экшенов
   * необходим для изменения переменных стейта редакса. Аналог setState().
   * Для функционального компонента нужно вызвать хук useDispatch().
   */
  const dispatch = useDispatch();
  
  /**
   * 5) Объект экшена - обязательно должен содержать свойство type. Это 
   * строка, придумывается разработчиков. type необходим, потому что он
   * проверяется в редьюсере. В payload можно положить любые переменные
   * (сделать пэйлоад объектом), чтобы потом использовать их в редьюсере
   */
  const actionPlus = {
    type: "PLUS",
    payload: 3
  };

  const actionMinus = {
    type: "MINUS",
  }

  /**
   * 6) Это обычная функция внутри компонента, в данном случае
   * она вызывается на клик кнопки
   */
  const minus = () => {
    /**
     * 7) Запуск экшена - вызываем ранее полученный (пункт 4) dispatch
     * и в него передается объект экшена. В этот момент вызывается редьюсер
     */
    dispatch(actionMinus);
  }

  /**
   * 3) Использование полученной переменной редакса в верстке. Она
   * работает и обновляется также как и переменная обычного стейта
   * компонента
   */
  return (
    <div className="App">
      {numberFromRedux}
      <button onClick={minus}>-</button>
    </div>
  );
}

export default App;
