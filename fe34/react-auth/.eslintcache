[{"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/actions/index.ts":"1","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/AuthWithFirebase.js":"2","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/Navbar/index.tsx":"3","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/index.js":"4","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/index.tsx":"5","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/navigation/NavigatorManual.js":"6","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/index.js":"7","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/react-app-env.d.ts":"8","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/reducers/authReducer.ts":"9","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/reducers/index.ts":"10","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/reducers/usersReducer.ts":"11","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/types/actions.ts":"12","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/types/interfaces.ts":"13","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/UserCard/index.tsx":"14","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/Users/index.tsx":"15","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/Auth/index.tsx":"16","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/navigation/Router.tsx":"17","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/Profile/index.tsx":"18"},{"size":6118,"mtime":1607264048299,"results":"19","hashOfConfig":"20"},{"size":1804,"mtime":1605711746194,"results":"21","hashOfConfig":"20"},{"size":1629,"mtime":1607267453108,"results":"22","hashOfConfig":"20"},{"size":53,"mtime":1607264214519,"results":"23","hashOfConfig":"20"},{"size":1896,"mtime":1607267769112,"results":"24","hashOfConfig":"20"},{"size":800,"mtime":1605543267527,"results":"25","hashOfConfig":"20"},{"size":127,"mtime":1605802893457,"results":"26","hashOfConfig":"20"},{"size":40,"mtime":1607178150450,"results":"27","hashOfConfig":"20"},{"size":3157,"mtime":1607267255137,"results":"28","hashOfConfig":"20"},{"size":968,"mtime":1607267444334,"results":"29","hashOfConfig":"20"},{"size":827,"mtime":1607181183836,"results":"30","hashOfConfig":"20"},{"size":1179,"mtime":1607180577098,"results":"31","hashOfConfig":"20"},{"size":826,"mtime":1607267432604,"results":"32","hashOfConfig":"20"},{"size":842,"mtime":1607264183913,"results":"33","hashOfConfig":"20"},{"size":981,"mtime":1607265995194,"results":"34","hashOfConfig":"20"},{"size":6297,"mtime":1607267640237,"results":"35","hashOfConfig":"20"},{"size":953,"mtime":1607266186944,"results":"36","hashOfConfig":"20"},{"size":1120,"mtime":1607265820325,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mkxmah",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/actions/index.ts",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/AuthWithFirebase.js",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/Navbar/index.tsx",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/index.js",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/index.tsx",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/navigation/NavigatorManual.js",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/index.js",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/react-app-env.d.ts",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/reducers/authReducer.ts",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/reducers/index.ts",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/reducers/usersReducer.ts",["76"],"import { actionTypes } from '../types/actions';\n\nimport { IUsersState } from '../types/interfaces';\n\ntype TUsersReducer = (state: IUsersState, action: any) => IUsersState;\n\n/**\n * 1) Начальный стейт уже создан. В эту переменную нужно положить\n * результат запроса на получение списка пользователей\n * */ \nconst initialState: IUsersState = {\n  users: []\n};\n\n/**\n * 2) В редьюсере нужно выполнить присвоение action.payload в users. В action.payload\n * нужно положить список пользователей из запроса.\n */\nconst reducer: TUsersReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n    default: return state;\n  }\n}\n\nexport default reducer;","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/types/actions.ts",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/types/interfaces.ts",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/components/UserCard/index.tsx",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/Users/index.tsx",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/Auth/index.tsx",["77"],"\nimport { connect } from 'react-redux'; // 1) Импортируем connect для подсоединения классового компонента к редаксу и скроллим в самый низ \nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// 1)\nimport { passwordChangeActionCreator, phoneChangeAction, login } from '../../actions';\nimport './styles.css';\nimport { IUser, IStore } from '../../types/interfaces';\n\ninterface IProps {\n  user: IUser | null;\n  phone: string;\n  password: string;\n  errors: string;\n  loading: boolean;\n  phoneChangeAction: (value: string) => void;\n  passwordChangeActionCreator: (value: string) => void;\n  login: (param: { phone: string, password: string}) => void;\n}\n\nclass Auth extends Component<IProps> {\n\n  componentWillUnmount = (): void => {\n    console.log('Auth unmounted');\n  }\n\n  /**\n   * Просто вызов экшена login по клику. Передаем переменные с номером телефона\n   * и паролем. Здесь можно провести хорошую оптимизацию - напомните на след. занятии! (*)\n   */\n  login = (): void => {\n    this.props.login({ phone: this.props.phone, password: this.props.password });\n  }\n\n  onChangePhone = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    this.props.phoneChangeAction(event.target.value)\n  }\n\n  render () {\n    return (\n      <div className=\"page\">\n        <h1>AUTHENTICATION</h1>\n        {this.props.user && (\n          <span>Hello {this.props.user.name.first}</span>\n        )}\n        <input\n          type=\"text\"\n          placeholder=\"phone\"\n          onChange={this.onChangePhone}\n          value={this.props.phone}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"password\"\n          onChange={(event) => this.props.passwordChangeActionCreator(event.target.value)}\n          value={this.props.password}\n        />\n        \n        <button onClick={this.login}>Login</button>\n        {this.props.errors && <span>{this.props.errors}</span>}\n\n        {/*this.props.user && (\n          <Redirect\n            to={{\n              pathname: \"/users\"\n            }}\n          />\n        )*/}\n        {this.props.loading && <span>Loading...</span>}\n\n      </div>\n    );\n  }\n}\n\n/**\n * 3) Это функция которая преобразует нужные нам переменные из редакса в пропсы нашего\n * компонента. Эта функция по соглашению всегд называется mapStateToProps. Она принимает\n * объект со всем что хранится в редаксе ( точно также как и useSelector) и возвращает\n * объект. В возвращаемом объекте ключи это имена наших будущих пропсов, а значения - \n * путь к переменной в стейте редакса (опять же точно также как в useSelector)\n * @param {object} state \n */\nconst mapStateToProps = (state: IStore) => {\n  return {\n    phone: state.auth.phone,\n    password: state.auth.password,\n    user: state.auth.user,\n    errors: state.auth.errors,\n    loading: state.auth.loading,\n    users: state.users.users\n  }\n}\n\n/**\n * 4) Чтобы компонент понимал, что наши экшены это не просто обычные функции, а именно\n * экшены которые нужно диспатчить ( прокидывать в редьюсер), то их также нужно \"обработать\"\n * и подключить с помощью connect. Для этого организуется объект, в котором достаточно\n * перечислить наши экшены, с которыми компонент будет работать. И после этого эти экшены\n * появятся в пропсах у компонента ( пример : this.props.phoneChangeAction)\n */ \nconst actions = {\n  passwordChangeActionCreator,\n  phoneChangeAction,\n  login\n}\n\n/**\n * 2) connect вызывается с двумя парами круглых скобок ( это функция которая возвращает\n * функцию, но здесь мы вызываем их обеих сразу). Во второй паре скобок должен находиться\n * компонент, в первой - два параметра. Дальше в пункты 3 и 4.\n * \n * 5) mapStateToProps и объект с экшенами нужно передать в первую пару скобок функции\n * connect. Если переменные из редакса компоненту не нужны, а какие-либо экшены нужны, то\n * тогда вместо mapStateToProps нужно написать null ( см. пример в файле  navigation/Router.js )\n */\nexport default connect  (mapStateToProps, actions )   (Auth);\n\n\n\n// здесь закомменченный функциональный компонент\n/*const Auth = () => {\n\n  const phone = useSelector( state => state.phone );\n  const password = useSelector( state => state.password );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log('did mount');\n  }, []);\n\n  useEffect(() => {\n    if (password.length === 3 && phone.length !== 0) {\n      console.log('login');\n    }\n  }, [password, phone]);\n\n  const onChangePassword = (event) => {\n    dispatch(\n      passwordChangeActionCreator(event.target.value)\n    );\n  };\n\n  const onChangePhone = (event) => {\n    dispatch(phoneChangeAction(event.target.value));\n  }\n\n  return (\n    <div className=\"page\">\n      <h1>AUTHENTICATION</h1>\n      <input\n        type=\"text\"\n        placeholder=\"phone\"\n        //onChange={(event) => this.setState({ phone: event.target.value, errors: '' })}\n        onChange={onChangePhone}\n        value={phone}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"password\"\n        //onChange={(event) => this.setState({ password: event.target.value, errors: '' })}\n        onChange={onChangePassword}\n        value={password}\n      />\n      \n    </div>\n  );\n}*/","/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/navigation/Router.tsx",[],"/Users/pavelbelakov/Github/frontend-course/fe34/react-auth/src/pages/Profile/index.tsx",[],{"ruleId":"78","severity":1,"message":"79","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":21},{"ruleId":"78","severity":1,"message":"82","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},"@typescript-eslint/no-unused-vars","'actionTypes' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used."]