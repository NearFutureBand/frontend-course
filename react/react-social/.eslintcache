[{"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/index.js":"1","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/const/index.js":"2","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/components/index.js":"3","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/Users/index.js":"4","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/Profile/index.js":"5","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/SignIn/index.js":"6","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/Main/index.js":"7","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/ProfileActions.js":"8","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/UsersActions.js":"9","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/AuthActions.js":"10","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/index.js":"11","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/index.js":"12","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/navigation/index.js":"13","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/AuthReducer.js":"14","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/UsersReducer.js":"15","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/ProfileRreducer.js":"16","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/SignIn/container.js":"17","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/components/Card/index.js":"18","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/components/NavBar/index.js":"19","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/SignIn/view.js":"20","/Users/pavelbelakov/TestProjects/react-social/src/index.js":"21","/Users/pavelbelakov/TestProjects/react-social/src/navigation/index.js":"22","/Users/pavelbelakov/TestProjects/react-social/src/const/index.js":"23","/Users/pavelbelakov/TestProjects/react-social/src/components/index.js":"24","/Users/pavelbelakov/TestProjects/react-social/src/pages/Users/index.js":"25","/Users/pavelbelakov/TestProjects/react-social/src/pages/Main/index.js":"26","/Users/pavelbelakov/TestProjects/react-social/src/pages/SignIn/index.js":"27","/Users/pavelbelakov/TestProjects/react-social/src/components/NavBar/index.js":"28","/Users/pavelbelakov/TestProjects/react-social/src/components/Card/index.js":"29","/Users/pavelbelakov/TestProjects/react-social/src/pages/Profile/index.js":"30"},{"size":1994,"mtime":1609073180928,"results":"31","hashOfConfig":"32"},{"size":1670,"mtime":1609073180927,"results":"33","hashOfConfig":"32"},{"size":601,"mtime":1609073180926,"results":"34","hashOfConfig":"32"},{"size":1458,"mtime":1609073180936,"results":"35","hashOfConfig":"32"},{"size":1210,"mtime":1609073180932,"results":"36","hashOfConfig":"32"},{"size":82,"mtime":1609073180934,"results":"37","hashOfConfig":"32"},{"size":537,"mtime":1609073180931,"results":"38","hashOfConfig":"32"},{"size":570,"mtime":1609073180920,"results":"39","hashOfConfig":"32"},{"size":1143,"mtime":1609073180921,"results":"40","hashOfConfig":"32"},{"size":5394,"mtime":1609073180919,"results":"41","hashOfConfig":"32"},{"size":96,"mtime":1609073180921,"results":"42","hashOfConfig":"32"},{"size":951,"mtime":1609073180940,"results":"43","hashOfConfig":"32"},{"size":1058,"mtime":1609073180930,"results":"44","hashOfConfig":"32"},{"size":3286,"mtime":1609073180937,"results":"45","hashOfConfig":"32"},{"size":953,"mtime":1609073180939,"results":"46","hashOfConfig":"32"},{"size":587,"mtime":1609073180938,"results":"47","hashOfConfig":"32"},{"size":3422,"mtime":1609073180933,"results":"48","hashOfConfig":"32"},{"size":3678,"mtime":1609073180923,"results":"49","hashOfConfig":"32"},{"size":2271,"mtime":1609073180925,"results":"50","hashOfConfig":"32"},{"size":1243,"mtime":1609073180935,"results":"51","hashOfConfig":"32"},{"size":240,"mtime":1615998002531,"results":"52","hashOfConfig":"53"},{"size":799,"mtime":1616005157173,"results":"54","hashOfConfig":"53"},{"size":79,"mtime":1615919540963,"results":"55","hashOfConfig":"53"},{"size":49,"mtime":1615997925959,"results":"56","hashOfConfig":"53"},{"size":989,"mtime":1616003959654,"results":"57","hashOfConfig":"53"},{"size":537,"mtime":1609073180931,"results":"58","hashOfConfig":"53"},{"size":1899,"mtime":1616001224024,"results":"59","hashOfConfig":"53"},{"size":349,"mtime":1615998746704,"results":"60","hashOfConfig":"53"},{"size":1046,"mtime":1615999477762,"results":"61","hashOfConfig":"53"},{"size":1810,"mtime":1616008188209,"results":"62","hashOfConfig":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"w7slh6",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x995o1",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/index.js",["130"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reduxLogger from 'redux-logger';\n\nimport './index.css';\nimport Navigator from './navigation';\nimport reducer from './reducers';\n\n/**\n * 1) createStore как обычно выполняется и создает стор, но при этом также он отвечает\n * и за инициализацию middlewares, которых может быть несколько. Грубо говоря, middleware\n * обеспечивают дополнительне нестандартные возможности для нашего редакс-хранилища. Например,\n * возможность работы с асинхронными экшенами, что и реализовано в библиотеке redux-thunk.\n * Для подключения middleware нужно вызвать функцию applyMiddleware и передать ее вторым\n * параметром после редьюсера при создании стора. На compose и большую строку с window. ...\n * обращать внимания не нужно - эта строка нужна для того, чтобы работал redux-devtools в хроме\n * \n * по итогу без всяких девтулз, все должно выглядеть так:\n * const store = createStore(\n *    reducer,\n *    applyMiddleware(thunk)\n * )\n */\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n//const store = createStore(reducer, applyMiddleware(thunk, reduxLogger));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Navigator />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/const/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/components/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/Users/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/Profile/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/SignIn/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/Main/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/ProfileActions.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/UsersActions.js",["131"],"import axios from 'axios';\n\nimport { ACTION_TYPES } from '../const';\n\n// 1) экщн, который показывает старт запроса \nconst getUsersStart = () => ({\n  type: ACTION_TYPES.GET_USERS_START,\n});\n\n// 2) успех запроса\nconst getUsersSuccess = (users) => ({\n  type: ACTION_TYPES.GET_USERS_SUCCESS,\n  payload: users,\n});\n\n// 3) провал запроса\nconst getUsersFailure = (err) => {\n  return {\n    type: ACTION_TYPES.GET_USERS_FAILURE,\n    payload: err,\n  }\n}\n\nexport const getUsers = () => {\n  \n  return async (dispatch) => {\n    \n    // диспатч принимает экшн (объект)\n    dispatch({\n      type: ACTION_TYPES.GET_USERS_START,\n    });\n\n    // 1) выполнение запросы\n    try {\n      const response = await axios.get('http://localhost:3001/users');\n      // 2) запрос успешен\n      dispatch(getUsersSuccess(response.data));\n    } catch (err) {\n\n      // 3) запрос провалился\n      dispatch(getUsersFailure(err));\n\n    }\n    \n  }\n\n}\n\nexport const sortUsersByName = () => {\n  return {\n    type: ACTION_TYPES.SORT_USERS_BY_NAME,\n  }\n}","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/AuthActions.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/actions/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/navigation/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/AuthReducer.js",["132"],"import { ACTION_TYPES } from '../const';\n\n/**\n * 1) Здесь начальное состояние для страницы Auth. Все переменные\n * которые раньше лежали в локальном стейте Auth переехали сюда. Первое что нужно\n * зделать чтобы компонент работал с редаксом - это создать состояние в редаксе\n * для этого компонента\n */\nconst initialState = {\n  phone: '', // значение инпута для ввода номера телефона\n  password: '', // значение инпута для ввода пароля\n  user: null, // переменная для хранения данных залогиненного пользователя\n  token: null, // переменная для хранения токена\n  errors: '', // переменная для вывода ошибок при аутентификации\n  loading: false, // переменная для отображения анимации загрузки при выполнении запросов\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    \n    /**\n     * 2) Экшены ON_CHANGE_PHONE и ON_CHANGE_PASSWORD просто устанавливают\n     * значение phone и password получая value из соответствующих инпутов\n     * в компоненте\n     */\n    case ACTION_TYPES.ON_CHANGE_PHONE: {\n      return {\n        ...state,\n        phone: action.payload,\n      }\n    }\n    case ACTION_TYPES.ON_CHANGE_PASSWORD: {\n      return {\n        ...state,\n        password: action.payload,\n      }\n    }\n\n    /**\n     * 3) Три экшена для трех этапов процесса логина. При старте включаем лоадер,\n     * при успехе или ошибке его выключаем. При успехе, также, кладем в редакс данные\n     * пользователя из action.payload. А в action.payload они потому, что этот экшен\n     * вызывается после выполнения запроса на логин и передает сюда данные пользователя,\n     * которые возвращает запрос. В случае неуспешного запроса на логин сетаем в редакс\n     * строку с текстом ошибки. После этого текст ошибки отобразится в компоненте\n     */\n    case ACTION_TYPES.SIGN_IN_START: {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case ACTION_TYPES.SIGN_IN_SUCCESS: {\n\n      return {\n        ...state,\n        ...initialState,\n        user: action.payload,\n        token: action.payload.token,\n        loading: false,\n      }\n    }\n    case ACTION_TYPES.SIGN_IN_FAILURE: {\n      return {\n        ...state,\n        loading: false\n      }\n    }\n\n    // Если нужно сбросить сразу много значений, можно\n    // вернуть initialState\n    case ACTION_TYPES.SIGN_OUT: {\n      return initialState;\n    }\n\n    default: return state\n  }\n}","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/UsersReducer.js",["133"],"import { ACTION_TYPES } from '../const';\n\nconst initialState = {\n  users: [],\n  loading: false,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    \n    case ACTION_TYPES.GET_USERS_START: {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case ACTION_TYPES.GET_USERS_SUCCESS: {\n      return {\n        ...state,\n        users: action.payload,\n        loading: false,\n      }\n    }\n    case ACTION_TYPES.GET_USERS_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n\n    case ACTION_TYPES.SORT_USERS_BY_NAME: {\n      const usersSorted = [...state.users];\n      return {\n        ...state,\n        users: usersSorted.sort((a,b) => {\n          if (a.name.first > b.name.first) {\n            return 1;\n          }\n          if (a.name.first < b.name.first) {\n            return -1;\n          }\n          return 0;\n        })\n      }\n    }\n\n    default: return state;\n  }\n}\n","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/reducers/ProfileRreducer.js",["134"],"import { ACTION_TYPES } from '../const';\n\nconst initialState = {\n  userData: null,\n  loading: false,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case ACTION_TYPES.GET_USER_START: {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n\n    case ACTION_TYPES.GET_USER_SUCCESS: {\n      return {\n        ...state,\n        userData: action.payload,\n        loading: false,\n      }\n    }\n\n    case ACTION_TYPES.GET_USER_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n\n    default: return state;\n  }\n}\n","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/SignIn/container.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/components/Card/index.js",["135","136"],"import React, { Component, memo, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst getClassNames = (small) => {\n  console.log('getclassnames');\n  return {\n    card: `card ${small && 'card-small'}`,\n    cardImage: `card-image ${small && 'card-image-small'}`,\n    cardContent: `card-content ${small && 'card-content-small'}`,\n  }\n};\n\nconst CardComponent = ({\n  picture,\n  name,\n  small,\n  id,\n  showId\n}) => {\n\n  // Пример функции, созданной через хук useCallback\n  /*const getClassNames = useCallback(\n    () => {\n      return {\n        card: `card ${small && 'card-small'}`,\n        cardImage: `card-image ${small && 'card-image-small'}`,\n        cardContent: `card-content ${small && 'card-content-small'}`,\n      }\n    },\n    [small]\n  );*/\n  \n  // Пример мемоизации переменной в функциональном компоненте\n  const classNames = useMemo( () => getClassNames(small), [small] );  \n\n  console.log('card render');\n\n  return (\n    <div className={classNames.card}>\n      <img\n        src={picture}\n        className={classNames.cardImage}\n        alt='avatar'\n      />\n      <div className={classNames.cardContent}>\n        <h2>{name.first}</h2>\n        <h4>{name.last}</h4>\n        {showId && <h5>{id}</h5>}\n      </div>\n    </div>\n  )\n}\n\n/**\n * Библиотека propTypes используется для описания типов пропсов.\n * Применяется, когда в проекте нет TypeScript\n */\nCardComponent.propTypes = {\n  picture: PropTypes.string,\n  name: PropTypes.shape({\n    first: PropTypes.string,\n    last: PropTypes.string,\n  }),\n  small: PropTypes.bool,\n};\n\n/**\n * Мемоизация функционального компонента, аналогично PureComponent\n */\nexport const Card = memo(CardComponent);\n\n\n\n// КЛАССОВЫЙ КОМПОНЕНТ\n/**\n * PureComponent используется для оптимизации компонента - чтобы лишний\n * раз у него не вызывался рендер. Если родительский компонент переррисовывается,\n * то это вызывает перерисовку дочерних компонентов. Даже если у них не менялись\n * ни стейт, ни пропсы.\n * \n * !!! Когда мы точно знаем что при перерисовке родительского компонента, дочерний\n * компонент остается неизменным (не меняются стейт или пропсы) и его перерисовка\n * не требуется, тогда его нужно унаследовать от PureComponent.\n * \n * Для классовых компонентов используется класс PureComponent, для функциональных -\n * HOC memo ( https://ru.reactjs.org/docs/react-api.html ) \n */\n\n/* class UserCard extends PureComponent {\n\n  render () {\n    const classNames = {\n      card: `card ${this.props.small ? 'card-small' : ''}`,\n      cardImage: `card-image ${this.props.small ? 'card-image-small' : ''}`,\n      cardContent: `card-content ${this.props.small ? 'card-content-small' : ''}`,\n    }\n  \n    return (\n      <div className={classNames.card}>\n        <img\n          src={this.props.picture}\n          className={classNames.cardImage}\n          alt='avatar'\n        />\n        <div className={classNames.cardContent}>\n          <h2>{this.props.name.first}</h2>\n          <h4>{this.props.name.last}</h4>\n        </div>\n      </div>\n    )\n  }\n}\n*/\n\n\n","/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/components/NavBar/index.js",[],"/Users/pavelbelakov/Github/frontend-course/react/react-redux-social/src/pages/SignIn/view.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/navigation/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/const/index.js",[],["137","138"],"/Users/pavelbelakov/TestProjects/react-social/src/components/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/pages/Users/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/pages/Main/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/pages/SignIn/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/components/NavBar/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/components/Card/index.js",[],"/Users/pavelbelakov/TestProjects/react-social/src/pages/Profile/index.js",["139","140","141","142"],{"ruleId":"143","severity":1,"message":"144","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":19},{"ruleId":"143","severity":1,"message":"147","line":6,"column":7,"nodeType":"145","messageId":"146","endLine":6,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":18,"column":1,"nodeType":"150","endLine":78,"endColumn":2},{"ruleId":"148","severity":1,"message":"149","line":8,"column":1,"nodeType":"150","endLine":49,"endColumn":2},{"ruleId":"148","severity":1,"message":"149","line":8,"column":1,"nodeType":"150","endLine":35,"endColumn":2},{"ruleId":"143","severity":1,"message":"151","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"152","line":1,"column":34,"nodeType":"145","messageId":"146","endLine":1,"endColumn":45},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"143","severity":1,"message":"151","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"157","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":13},{"ruleId":"143","severity":1,"message":"158","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"159","line":50,"column":5,"nodeType":"145","messageId":"146","endLine":50,"endColumn":15},"no-unused-vars","'reduxLogger' is defined but never used.","Identifier","unusedVar","'getUsersStart' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'useCallback' is defined but never used.","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'axios' is defined but never used.","'Card' is defined but never used.","'intervalId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]